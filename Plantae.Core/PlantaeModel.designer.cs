#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Plantae.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Plantae")]
	public partial class PlantaeModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCATEGORIA(CATEGORIA instance);
    partial void UpdateCATEGORIA(CATEGORIA instance);
    partial void DeleteCATEGORIA(CATEGORIA instance);
    partial void InsertTRANSFERENCIA(TRANSFERENCIA instance);
    partial void UpdateTRANSFERENCIA(TRANSFERENCIA instance);
    partial void DeleteTRANSFERENCIA(TRANSFERENCIA instance);
    partial void InsertCONTA(CONTA instance);
    partial void UpdateCONTA(CONTA instance);
    partial void DeleteCONTA(CONTA instance);
    partial void InsertJOURNAL(JOURNAL instance);
    partial void UpdateJOURNAL(JOURNAL instance);
    partial void DeleteJOURNAL(JOURNAL instance);
    partial void InsertTRANSACAO(TRANSACAO instance);
    partial void UpdateTRANSACAO(TRANSACAO instance);
    partial void DeleteTRANSACAO(TRANSACAO instance);
    #endregion
		
		public PlantaeModelDataContext() : 
				base(global::Plantae.Core.Properties.Settings.Default.PlantaeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PlantaeModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlantaeModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlantaeModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlantaeModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CATEGORIA> CATEGORIAs
		{
			get
			{
				return this.GetTable<CATEGORIA>();
			}
		}
		
		public System.Data.Linq.Table<TRANSFERENCIA> TRANSFERENCIAs
		{
			get
			{
				return this.GetTable<TRANSFERENCIA>();
			}
		}
		
		public System.Data.Linq.Table<CONTA> CONTAs
		{
			get
			{
				return this.GetTable<CONTA>();
			}
		}
		
		public System.Data.Linq.Table<JOURNAL> JOURNALs
		{
			get
			{
				return this.GetTable<JOURNAL>();
			}
		}
		
		public System.Data.Linq.Table<TRANSACAO> TRANSACAOs
		{
			get
			{
				return this.GetTable<TRANSACAO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIA")]
	public partial class CATEGORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CategoriaID;
		
		private string _Nome;
		
		private string _Owner;
		
		private System.Guid _Guid;
		
		private System.DateTime _DataAlteracao;
		
		private EntitySet<JOURNAL> _JOURNALS;
		
		private EntitySet<TRANSACAO> _TRANSACOES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoriaIDChanging(long value);
    partial void OnCategoriaIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnDataAlteracaoChanging(System.DateTime value);
    partial void OnDataAlteracaoChanged();
    #endregion
		
		public CATEGORIA()
		{
			this._JOURNALS = new EntitySet<JOURNAL>(new Action<JOURNAL>(this.attach_JOURNALS), new Action<JOURNAL>(this.detach_JOURNALS));
			this._TRANSACOES = new EntitySet<TRANSACAO>(new Action<TRANSACAO>(this.attach_TRANSACOES), new Action<TRANSACAO>(this.detach_TRANSACOES));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CategoriaID
		{
			get
			{
				return this._CategoriaID;
			}
			set
			{
				if ((this._CategoriaID != value))
				{
					this.OnCategoriaIDChanging(value);
					this.SendPropertyChanging();
					this._CategoriaID = value;
					this.SendPropertyChanged("CategoriaID");
					this.OnCategoriaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAlteracao", DbType="DateTime NOT NULL")]
		public System.DateTime DataAlteracao
		{
			get
			{
				return this._DataAlteracao;
			}
			set
			{
				if ((this._DataAlteracao != value))
				{
					this.OnDataAlteracaoChanging(value);
					this.SendPropertyChanging();
					this._DataAlteracao = value;
					this.SendPropertyChanged("DataAlteracao");
					this.OnDataAlteracaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_JOURNAL", Storage="_JOURNALS", ThisKey="CategoriaID", OtherKey="CategoriaID")]
		public EntitySet<JOURNAL> JOURNALS
		{
			get
			{
				return this._JOURNALS;
			}
			set
			{
				this._JOURNALS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_TRANSACAO", Storage="_TRANSACOES", ThisKey="CategoriaID", OtherKey="CategoriaID")]
		public EntitySet<TRANSACAO> TRANSACOES
		{
			get
			{
				return this._TRANSACOES;
			}
			set
			{
				this._TRANSACOES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JOURNALS(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = this;
		}
		
		private void detach_JOURNALS(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = null;
		}
		
		private void attach_TRANSACOES(TRANSACAO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = this;
		}
		
		private void detach_TRANSACOES(TRANSACAO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANSFERENCIA")]
	public partial class TRANSFERENCIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TransferenciaID;
		
		private long _JournalID;
		
		private long _DebitoID;
		
		private long _CreditoID;
		
		private string _Owner;
		
		private System.Guid _Guid;
		
		private System.DateTime _DataAlteracao;
		
		private EntityRef<JOURNAL> _JOURNAL;
		
		private EntityRef<TRANSACAO> _CREDITO;
		
		private EntityRef<TRANSACAO> _DEBITO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransferenciaIDChanging(long value);
    partial void OnTransferenciaIDChanged();
    partial void OnJournalIDChanging(long value);
    partial void OnJournalIDChanged();
    partial void OnDebitoIDChanging(long value);
    partial void OnDebitoIDChanged();
    partial void OnCreditoIDChanging(long value);
    partial void OnCreditoIDChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnDataAlteracaoChanging(System.DateTime value);
    partial void OnDataAlteracaoChanged();
    #endregion
		
		public TRANSFERENCIA()
		{
			this._JOURNAL = default(EntityRef<JOURNAL>);
			this._CREDITO = default(EntityRef<TRANSACAO>);
			this._DEBITO = default(EntityRef<TRANSACAO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferenciaID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TransferenciaID
		{
			get
			{
				return this._TransferenciaID;
			}
			set
			{
				if ((this._TransferenciaID != value))
				{
					this.OnTransferenciaIDChanging(value);
					this.SendPropertyChanging();
					this._TransferenciaID = value;
					this.SendPropertyChanged("TransferenciaID");
					this.OnTransferenciaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", DbType="BigInt NOT NULL")]
		public long JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					if (this._JOURNAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitoID", DbType="BigInt NOT NULL")]
		public long DebitoID
		{
			get
			{
				return this._DebitoID;
			}
			set
			{
				if ((this._DebitoID != value))
				{
					if (this._DEBITO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDebitoIDChanging(value);
					this.SendPropertyChanging();
					this._DebitoID = value;
					this.SendPropertyChanged("DebitoID");
					this.OnDebitoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditoID", DbType="BigInt NOT NULL")]
		public long CreditoID
		{
			get
			{
				return this._CreditoID;
			}
			set
			{
				if ((this._CreditoID != value))
				{
					if (this._CREDITO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditoIDChanging(value);
					this.SendPropertyChanging();
					this._CreditoID = value;
					this.SendPropertyChanged("CreditoID");
					this.OnCreditoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAlteracao", DbType="DateTime NOT NULL")]
		public System.DateTime DataAlteracao
		{
			get
			{
				return this._DataAlteracao;
			}
			set
			{
				if ((this._DataAlteracao != value))
				{
					this.OnDataAlteracaoChanging(value);
					this.SendPropertyChanging();
					this._DataAlteracao = value;
					this.SendPropertyChanged("DataAlteracao");
					this.OnDataAlteracaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOURNAL_TRANSFERENCIA", Storage="_JOURNAL", ThisKey="JournalID", OtherKey="JournalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public JOURNAL JOURNAL
		{
			get
			{
				return this._JOURNAL.Entity;
			}
			set
			{
				JOURNAL previousValue = this._JOURNAL.Entity;
				if (((previousValue != value) 
							|| (this._JOURNAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOURNAL.Entity = null;
						previousValue.TRANSFERENCIAS.Remove(this);
					}
					this._JOURNAL.Entity = value;
					if ((value != null))
					{
						value.TRANSFERENCIAS.Add(this);
						this._JournalID = value.JournalID;
					}
					else
					{
						this._JournalID = default(long);
					}
					this.SendPropertyChanged("JOURNAL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACAO_TRANSFERENCIA", Storage="_CREDITO", ThisKey="CreditoID", OtherKey="TransacaoID", IsForeignKey=true)]
		public TRANSACAO CREDITO
		{
			get
			{
				return this._CREDITO.Entity;
			}
			set
			{
				TRANSACAO previousValue = this._CREDITO.Entity;
				if (((previousValue != value) 
							|| (this._CREDITO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CREDITO.Entity = null;
						previousValue.TRANSFERENCIASCREDITO.Remove(this);
					}
					this._CREDITO.Entity = value;
					if ((value != null))
					{
						value.TRANSFERENCIASCREDITO.Add(this);
						this._CreditoID = value.TransacaoID;
					}
					else
					{
						this._CreditoID = default(long);
					}
					this.SendPropertyChanged("CREDITO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACAO_TRANSFERENCIA1", Storage="_DEBITO", ThisKey="DebitoID", OtherKey="TransacaoID", IsForeignKey=true)]
		public TRANSACAO DEBITO
		{
			get
			{
				return this._DEBITO.Entity;
			}
			set
			{
				TRANSACAO previousValue = this._DEBITO.Entity;
				if (((previousValue != value) 
							|| (this._DEBITO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEBITO.Entity = null;
						previousValue.TRANSFERENCIASDEBITO.Remove(this);
					}
					this._DEBITO.Entity = value;
					if ((value != null))
					{
						value.TRANSFERENCIASDEBITO.Add(this);
						this._DebitoID = value.TransacaoID;
					}
					else
					{
						this._DebitoID = default(long);
					}
					this.SendPropertyChanged("DEBITO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTA")]
	public partial class CONTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ContaID;
		
		private string _Nome;
		
		private System.DateTime _DataInicial;
		
		private decimal _SaldoInicial;
		
		private string _Owner;
		
		private System.Guid _Guid;
		
		private System.DateTime _DataAlteracao;
		
		private EntitySet<JOURNAL> _JOURNALSCREDITO;
		
		private EntitySet<JOURNAL> _JOURNALSDEBITO;
		
		private EntitySet<TRANSACAO> _TRANSACOES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContaIDChanging(long value);
    partial void OnContaIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataInicialChanging(System.DateTime value);
    partial void OnDataInicialChanged();
    partial void OnSaldoInicialChanging(decimal value);
    partial void OnSaldoInicialChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnDataAlteracaoChanging(System.DateTime value);
    partial void OnDataAlteracaoChanged();
    #endregion
		
		public CONTA()
		{
			this._JOURNALSCREDITO = new EntitySet<JOURNAL>(new Action<JOURNAL>(this.attach_JOURNALSCREDITO), new Action<JOURNAL>(this.detach_JOURNALSCREDITO));
			this._JOURNALSDEBITO = new EntitySet<JOURNAL>(new Action<JOURNAL>(this.attach_JOURNALSDEBITO), new Action<JOURNAL>(this.detach_JOURNALSDEBITO));
			this._TRANSACOES = new EntitySet<TRANSACAO>(new Action<TRANSACAO>(this.attach_TRANSACOES), new Action<TRANSACAO>(this.detach_TRANSACOES));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContaID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ContaID
		{
			get
			{
				return this._ContaID;
			}
			set
			{
				if ((this._ContaID != value))
				{
					this.OnContaIDChanging(value);
					this.SendPropertyChanging();
					this._ContaID = value;
					this.SendPropertyChanged("ContaID");
					this.OnContaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInicial", DbType="Date NOT NULL")]
		public System.DateTime DataInicial
		{
			get
			{
				return this._DataInicial;
			}
			set
			{
				if ((this._DataInicial != value))
				{
					this.OnDataInicialChanging(value);
					this.SendPropertyChanging();
					this._DataInicial = value;
					this.SendPropertyChanged("DataInicial");
					this.OnDataInicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaldoInicial", DbType="Decimal(18,2) NOT NULL")]
		public decimal SaldoInicial
		{
			get
			{
				return this._SaldoInicial;
			}
			set
			{
				if ((this._SaldoInicial != value))
				{
					this.OnSaldoInicialChanging(value);
					this.SendPropertyChanging();
					this._SaldoInicial = value;
					this.SendPropertyChanged("SaldoInicial");
					this.OnSaldoInicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAlteracao", DbType="DateTime NOT NULL")]
		public System.DateTime DataAlteracao
		{
			get
			{
				return this._DataAlteracao;
			}
			set
			{
				if ((this._DataAlteracao != value))
				{
					this.OnDataAlteracaoChanging(value);
					this.SendPropertyChanging();
					this._DataAlteracao = value;
					this.SendPropertyChanged("DataAlteracao");
					this.OnDataAlteracaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTA_JOURNAL", Storage="_JOURNALSCREDITO", ThisKey="ContaID", OtherKey="ContaCreditoID")]
		public EntitySet<JOURNAL> JOURNALSCREDITO
		{
			get
			{
				return this._JOURNALSCREDITO;
			}
			set
			{
				this._JOURNALSCREDITO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTA_JOURNAL1", Storage="_JOURNALSDEBITO", ThisKey="ContaID", OtherKey="ContaDebitoID")]
		public EntitySet<JOURNAL> JOURNALSDEBITO
		{
			get
			{
				return this._JOURNALSDEBITO;
			}
			set
			{
				this._JOURNALSDEBITO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTA_TRANSACAO", Storage="_TRANSACOES", ThisKey="ContaID", OtherKey="ContaID")]
		public EntitySet<TRANSACAO> TRANSACOES
		{
			get
			{
				return this._TRANSACOES;
			}
			set
			{
				this._TRANSACOES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JOURNALSCREDITO(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.CONTACREDITO = this;
		}
		
		private void detach_JOURNALSCREDITO(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.CONTACREDITO = null;
		}
		
		private void attach_JOURNALSDEBITO(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.CONTADEBITO = this;
		}
		
		private void detach_JOURNALSDEBITO(JOURNAL entity)
		{
			this.SendPropertyChanging();
			entity.CONTADEBITO = null;
		}
		
		private void attach_TRANSACOES(TRANSACAO entity)
		{
			this.SendPropertyChanging();
			entity.CONTA = this;
		}
		
		private void detach_TRANSACOES(TRANSACAO entity)
		{
			this.SendPropertyChanging();
			entity.CONTA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOURNAL")]
	public partial class JOURNAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _JournalID;
		
		private int _TipoTransacao;
		
		private System.Nullable<long> _ContaDebitoID;
		
		private System.Nullable<long> _ContaCreditoID;
		
		private long _CategoriaID;
		
		private string _Nome;
		
		private System.DateTime _Data;
		
		private decimal _Valor;
		
		private int _Periodicidade;
		
		private int _ParcelaInicial;
		
		private int _ParcelaTotal;
		
		private bool _TempoIndeterminado;
		
		private System.DateTime _UltimaAtualizacao;
		
		private string _Owner;
		
		private System.Guid _Guid;
		
		private System.DateTime _DataAlteracao;
		
		private EntitySet<TRANSFERENCIA> _TRANSFERENCIAS;
		
		private EntitySet<TRANSACAO> _TRANSACOES;
		
		private EntityRef<CATEGORIA> _CATEGORIA;
		
		private EntityRef<CONTA> _CONTACREDITO;
		
		private EntityRef<CONTA> _CONTADEBITO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalIDChanging(long value);
    partial void OnJournalIDChanged();
    partial void OnTipoTransacaoChanging(int value);
    partial void OnTipoTransacaoChanged();
    partial void OnContaDebitoIDChanging(System.Nullable<long> value);
    partial void OnContaDebitoIDChanged();
    partial void OnContaCreditoIDChanging(System.Nullable<long> value);
    partial void OnContaCreditoIDChanged();
    partial void OnCategoriaIDChanging(long value);
    partial void OnCategoriaIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnValorChanging(decimal value);
    partial void OnValorChanged();
    partial void OnPeriodicidadeChanging(int value);
    partial void OnPeriodicidadeChanged();
    partial void OnParcelaInicialChanging(int value);
    partial void OnParcelaInicialChanged();
    partial void OnParcelaTotalChanging(int value);
    partial void OnParcelaTotalChanged();
    partial void OnTempoIndeterminadoChanging(bool value);
    partial void OnTempoIndeterminadoChanged();
    partial void OnUltimaAtualizacaoChanging(System.DateTime value);
    partial void OnUltimaAtualizacaoChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnDataAlteracaoChanging(System.DateTime value);
    partial void OnDataAlteracaoChanged();
    #endregion
		
		public JOURNAL()
		{
			this._TRANSFERENCIAS = new EntitySet<TRANSFERENCIA>(new Action<TRANSFERENCIA>(this.attach_TRANSFERENCIAS), new Action<TRANSFERENCIA>(this.detach_TRANSFERENCIAS));
			this._TRANSACOES = new EntitySet<TRANSACAO>(new Action<TRANSACAO>(this.attach_TRANSACOES), new Action<TRANSACAO>(this.detach_TRANSACOES));
			this._CATEGORIA = default(EntityRef<CATEGORIA>);
			this._CONTACREDITO = default(EntityRef<CONTA>);
			this._CONTADEBITO = default(EntityRef<CONTA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoTransacao", DbType="Int NOT NULL")]
		public int TipoTransacao
		{
			get
			{
				return this._TipoTransacao;
			}
			set
			{
				if ((this._TipoTransacao != value))
				{
					this.OnTipoTransacaoChanging(value);
					this.SendPropertyChanging();
					this._TipoTransacao = value;
					this.SendPropertyChanged("TipoTransacao");
					this.OnTipoTransacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContaDebitoID", DbType="BigInt")]
		public System.Nullable<long> ContaDebitoID
		{
			get
			{
				return this._ContaDebitoID;
			}
			set
			{
				if ((this._ContaDebitoID != value))
				{
					if (this._CONTADEBITO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContaDebitoIDChanging(value);
					this.SendPropertyChanging();
					this._ContaDebitoID = value;
					this.SendPropertyChanged("ContaDebitoID");
					this.OnContaDebitoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContaCreditoID", DbType="BigInt")]
		public System.Nullable<long> ContaCreditoID
		{
			get
			{
				return this._ContaCreditoID;
			}
			set
			{
				if ((this._ContaCreditoID != value))
				{
					if (this._CONTACREDITO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContaCreditoIDChanging(value);
					this.SendPropertyChanging();
					this._ContaCreditoID = value;
					this.SendPropertyChanged("ContaCreditoID");
					this.OnContaCreditoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaID", DbType="BigInt NOT NULL")]
		public long CategoriaID
		{
			get
			{
				return this._CategoriaID;
			}
			set
			{
				if ((this._CategoriaID != value))
				{
					if (this._CATEGORIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaIDChanging(value);
					this.SendPropertyChanging();
					this._CategoriaID = value;
					this.SendPropertyChanged("CategoriaID");
					this.OnCategoriaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(18,2) NOT NULL")]
		public decimal Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Periodicidade", DbType="Int NOT NULL")]
		public int Periodicidade
		{
			get
			{
				return this._Periodicidade;
			}
			set
			{
				if ((this._Periodicidade != value))
				{
					this.OnPeriodicidadeChanging(value);
					this.SendPropertyChanging();
					this._Periodicidade = value;
					this.SendPropertyChanged("Periodicidade");
					this.OnPeriodicidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcelaInicial", DbType="Int NOT NULL")]
		public int ParcelaInicial
		{
			get
			{
				return this._ParcelaInicial;
			}
			set
			{
				if ((this._ParcelaInicial != value))
				{
					this.OnParcelaInicialChanging(value);
					this.SendPropertyChanging();
					this._ParcelaInicial = value;
					this.SendPropertyChanged("ParcelaInicial");
					this.OnParcelaInicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcelaTotal", DbType="Int NOT NULL")]
		public int ParcelaTotal
		{
			get
			{
				return this._ParcelaTotal;
			}
			set
			{
				if ((this._ParcelaTotal != value))
				{
					this.OnParcelaTotalChanging(value);
					this.SendPropertyChanging();
					this._ParcelaTotal = value;
					this.SendPropertyChanged("ParcelaTotal");
					this.OnParcelaTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempoIndeterminado", DbType="Bit NOT NULL")]
		public bool TempoIndeterminado
		{
			get
			{
				return this._TempoIndeterminado;
			}
			set
			{
				if ((this._TempoIndeterminado != value))
				{
					this.OnTempoIndeterminadoChanging(value);
					this.SendPropertyChanging();
					this._TempoIndeterminado = value;
					this.SendPropertyChanged("TempoIndeterminado");
					this.OnTempoIndeterminadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimaAtualizacao", DbType="Date NOT NULL")]
		public System.DateTime UltimaAtualizacao
		{
			get
			{
				return this._UltimaAtualizacao;
			}
			set
			{
				if ((this._UltimaAtualizacao != value))
				{
					this.OnUltimaAtualizacaoChanging(value);
					this.SendPropertyChanging();
					this._UltimaAtualizacao = value;
					this.SendPropertyChanged("UltimaAtualizacao");
					this.OnUltimaAtualizacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAlteracao", DbType="DateTime NOT NULL")]
		public System.DateTime DataAlteracao
		{
			get
			{
				return this._DataAlteracao;
			}
			set
			{
				if ((this._DataAlteracao != value))
				{
					this.OnDataAlteracaoChanging(value);
					this.SendPropertyChanging();
					this._DataAlteracao = value;
					this.SendPropertyChanged("DataAlteracao");
					this.OnDataAlteracaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOURNAL_TRANSFERENCIA", Storage="_TRANSFERENCIAS", ThisKey="JournalID", OtherKey="JournalID")]
		public EntitySet<TRANSFERENCIA> TRANSFERENCIAS
		{
			get
			{
				return this._TRANSFERENCIAS;
			}
			set
			{
				this._TRANSFERENCIAS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOURNAL_TRANSACAO", Storage="_TRANSACOES", ThisKey="JournalID", OtherKey="JournalID")]
		public EntitySet<TRANSACAO> TRANSACOES
		{
			get
			{
				return this._TRANSACOES;
			}
			set
			{
				this._TRANSACOES.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_JOURNAL", Storage="_CATEGORIA", ThisKey="CategoriaID", OtherKey="CategoriaID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CATEGORIA CATEGORIA
		{
			get
			{
				return this._CATEGORIA.Entity;
			}
			set
			{
				CATEGORIA previousValue = this._CATEGORIA.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORIA.Entity = null;
						previousValue.JOURNALS.Remove(this);
					}
					this._CATEGORIA.Entity = value;
					if ((value != null))
					{
						value.JOURNALS.Add(this);
						this._CategoriaID = value.CategoriaID;
					}
					else
					{
						this._CategoriaID = default(long);
					}
					this.SendPropertyChanged("CATEGORIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTA_JOURNAL", Storage="_CONTACREDITO", ThisKey="ContaCreditoID", OtherKey="ContaID", IsForeignKey=true)]
		public CONTA CONTACREDITO
		{
			get
			{
				return this._CONTACREDITO.Entity;
			}
			set
			{
				CONTA previousValue = this._CONTACREDITO.Entity;
				if (((previousValue != value) 
							|| (this._CONTACREDITO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTACREDITO.Entity = null;
						previousValue.JOURNALSCREDITO.Remove(this);
					}
					this._CONTACREDITO.Entity = value;
					if ((value != null))
					{
						value.JOURNALSCREDITO.Add(this);
						this._ContaCreditoID = value.ContaID;
					}
					else
					{
						this._ContaCreditoID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CONTACREDITO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTA_JOURNAL1", Storage="_CONTADEBITO", ThisKey="ContaDebitoID", OtherKey="ContaID", IsForeignKey=true)]
		public CONTA CONTADEBITO
		{
			get
			{
				return this._CONTADEBITO.Entity;
			}
			set
			{
				CONTA previousValue = this._CONTADEBITO.Entity;
				if (((previousValue != value) 
							|| (this._CONTADEBITO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTADEBITO.Entity = null;
						previousValue.JOURNALSDEBITO.Remove(this);
					}
					this._CONTADEBITO.Entity = value;
					if ((value != null))
					{
						value.JOURNALSDEBITO.Add(this);
						this._ContaDebitoID = value.ContaID;
					}
					else
					{
						this._ContaDebitoID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CONTADEBITO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRANSFERENCIAS(TRANSFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.JOURNAL = this;
		}
		
		private void detach_TRANSFERENCIAS(TRANSFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.JOURNAL = null;
		}
		
		private void attach_TRANSACOES(TRANSACAO entity)
		{
			this.SendPropertyChanging();
			entity.JOURNAL = this;
		}
		
		private void detach_TRANSACOES(TRANSACAO entity)
		{
			this.SendPropertyChanging();
			entity.JOURNAL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANSACAO")]
	public partial class TRANSACAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TransacaoID;
		
		private long _JournalID;
		
		private long _ContaID;
		
		private long _CategoriaID;
		
		private string _Nome;
		
		private System.DateTime _Data;
		
		private decimal _Valor;
		
		private System.Nullable<int> _NumParcela;
		
		private string _Owner;
		
		private System.Guid _Guid;
		
		private System.DateTime _DataAlteracao;
		
		private EntitySet<TRANSFERENCIA> _TRANSFERENCIASCREDITO;
		
		private EntitySet<TRANSFERENCIA> _TRANSFERENCIASDEBITO;
		
		private EntityRef<CATEGORIA> _CATEGORIA;
		
		private EntityRef<CONTA> _CONTA;
		
		private EntityRef<JOURNAL> _JOURNAL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransacaoIDChanging(long value);
    partial void OnTransacaoIDChanged();
    partial void OnJournalIDChanging(long value);
    partial void OnJournalIDChanged();
    partial void OnContaIDChanging(long value);
    partial void OnContaIDChanged();
    partial void OnCategoriaIDChanging(long value);
    partial void OnCategoriaIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnValorChanging(decimal value);
    partial void OnValorChanged();
    partial void OnNumParcelaChanging(System.Nullable<int> value);
    partial void OnNumParcelaChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnDataAlteracaoChanging(System.DateTime value);
    partial void OnDataAlteracaoChanged();
    #endregion
		
		public TRANSACAO()
		{
			this._TRANSFERENCIASCREDITO = new EntitySet<TRANSFERENCIA>(new Action<TRANSFERENCIA>(this.attach_TRANSFERENCIASCREDITO), new Action<TRANSFERENCIA>(this.detach_TRANSFERENCIASCREDITO));
			this._TRANSFERENCIASDEBITO = new EntitySet<TRANSFERENCIA>(new Action<TRANSFERENCIA>(this.attach_TRANSFERENCIASDEBITO), new Action<TRANSFERENCIA>(this.detach_TRANSFERENCIASDEBITO));
			this._CATEGORIA = default(EntityRef<CATEGORIA>);
			this._CONTA = default(EntityRef<CONTA>);
			this._JOURNAL = default(EntityRef<JOURNAL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransacaoID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TransacaoID
		{
			get
			{
				return this._TransacaoID;
			}
			set
			{
				if ((this._TransacaoID != value))
				{
					this.OnTransacaoIDChanging(value);
					this.SendPropertyChanging();
					this._TransacaoID = value;
					this.SendPropertyChanged("TransacaoID");
					this.OnTransacaoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", DbType="BigInt NOT NULL")]
		public long JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					if (this._JOURNAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContaID", DbType="BigInt NOT NULL")]
		public long ContaID
		{
			get
			{
				return this._ContaID;
			}
			set
			{
				if ((this._ContaID != value))
				{
					if (this._CONTA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContaIDChanging(value);
					this.SendPropertyChanging();
					this._ContaID = value;
					this.SendPropertyChanged("ContaID");
					this.OnContaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaID", DbType="BigInt NOT NULL")]
		public long CategoriaID
		{
			get
			{
				return this._CategoriaID;
			}
			set
			{
				if ((this._CategoriaID != value))
				{
					if (this._CATEGORIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaIDChanging(value);
					this.SendPropertyChanging();
					this._CategoriaID = value;
					this.SendPropertyChanged("CategoriaID");
					this.OnCategoriaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Decimal(18,2) NOT NULL")]
		public decimal Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumParcela", DbType="Int")]
		public System.Nullable<int> NumParcela
		{
			get
			{
				return this._NumParcela;
			}
			set
			{
				if ((this._NumParcela != value))
				{
					this.OnNumParcelaChanging(value);
					this.SendPropertyChanging();
					this._NumParcela = value;
					this.SendPropertyChanged("NumParcela");
					this.OnNumParcelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAlteracao", DbType="DateTime NOT NULL")]
		public System.DateTime DataAlteracao
		{
			get
			{
				return this._DataAlteracao;
			}
			set
			{
				if ((this._DataAlteracao != value))
				{
					this.OnDataAlteracaoChanging(value);
					this.SendPropertyChanging();
					this._DataAlteracao = value;
					this.SendPropertyChanged("DataAlteracao");
					this.OnDataAlteracaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACAO_TRANSFERENCIA", Storage="_TRANSFERENCIASCREDITO", ThisKey="TransacaoID", OtherKey="CreditoID")]
		public EntitySet<TRANSFERENCIA> TRANSFERENCIASCREDITO
		{
			get
			{
				return this._TRANSFERENCIASCREDITO;
			}
			set
			{
				this._TRANSFERENCIASCREDITO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACAO_TRANSFERENCIA1", Storage="_TRANSFERENCIASDEBITO", ThisKey="TransacaoID", OtherKey="DebitoID")]
		public EntitySet<TRANSFERENCIA> TRANSFERENCIASDEBITO
		{
			get
			{
				return this._TRANSFERENCIASDEBITO;
			}
			set
			{
				this._TRANSFERENCIASDEBITO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_TRANSACAO", Storage="_CATEGORIA", ThisKey="CategoriaID", OtherKey="CategoriaID", IsForeignKey=true)]
		public CATEGORIA CATEGORIA
		{
			get
			{
				return this._CATEGORIA.Entity;
			}
			set
			{
				CATEGORIA previousValue = this._CATEGORIA.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORIA.Entity = null;
						previousValue.TRANSACOES.Remove(this);
					}
					this._CATEGORIA.Entity = value;
					if ((value != null))
					{
						value.TRANSACOES.Add(this);
						this._CategoriaID = value.CategoriaID;
					}
					else
					{
						this._CategoriaID = default(long);
					}
					this.SendPropertyChanged("CATEGORIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTA_TRANSACAO", Storage="_CONTA", ThisKey="ContaID", OtherKey="ContaID", IsForeignKey=true)]
		public CONTA CONTA
		{
			get
			{
				return this._CONTA.Entity;
			}
			set
			{
				CONTA previousValue = this._CONTA.Entity;
				if (((previousValue != value) 
							|| (this._CONTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTA.Entity = null;
						previousValue.TRANSACOES.Remove(this);
					}
					this._CONTA.Entity = value;
					if ((value != null))
					{
						value.TRANSACOES.Add(this);
						this._ContaID = value.ContaID;
					}
					else
					{
						this._ContaID = default(long);
					}
					this.SendPropertyChanged("CONTA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JOURNAL_TRANSACAO", Storage="_JOURNAL", ThisKey="JournalID", OtherKey="JournalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public JOURNAL JOURNAL
		{
			get
			{
				return this._JOURNAL.Entity;
			}
			set
			{
				JOURNAL previousValue = this._JOURNAL.Entity;
				if (((previousValue != value) 
							|| (this._JOURNAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOURNAL.Entity = null;
						previousValue.TRANSACOES.Remove(this);
					}
					this._JOURNAL.Entity = value;
					if ((value != null))
					{
						value.TRANSACOES.Add(this);
						this._JournalID = value.JournalID;
					}
					else
					{
						this._JournalID = default(long);
					}
					this.SendPropertyChanged("JOURNAL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRANSFERENCIASCREDITO(TRANSFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.CREDITO = this;
		}
		
		private void detach_TRANSFERENCIASCREDITO(TRANSFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.CREDITO = null;
		}
		
		private void attach_TRANSFERENCIASDEBITO(TRANSFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.DEBITO = this;
		}
		
		private void detach_TRANSFERENCIASDEBITO(TRANSFERENCIA entity)
		{
			this.SendPropertyChanging();
			entity.DEBITO = null;
		}
	}
}
#pragma warning restore 1591
