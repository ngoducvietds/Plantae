@model Plantae.Web.Models.JournalModel

<script src="@Url.Content("~/Scripts/jquery-1.6.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm((string)ViewBag.FormAction, "Transacoes")) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>JournalModel</legend>

        <div class="editor-field">
            @Html.Hidden("TipoTransacao", (string)ViewBag.TipoTransacao)
        </div>

        @if (ViewBag.TipoTransacao != "1") {
        <div class="editor-label">
            @Html.LabelFor(model => model.CONTADEBITO)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ContaDebitoID", ViewBag.ContasDebito as SelectList, "Escolha a conta de débito")
            @Html.ValidationMessageFor(model => model.CONTADEBITO)
        </div>
        }

        @if (ViewBag.TipoTransacao != "0") {
        <div class="editor-label">
            @Html.LabelFor(model => model.CONTACREDITO)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ContaCreditoID", ViewBag.ContasCredito as SelectList, "Escolha a conta de crédito")
            @Html.ValidationMessageFor(model => model.CONTACREDITO)
        </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.CATEGORIA)
        </div>
        <div class="editor-field">
            @Html.DropDownList("CategoriaId", ViewBag.Categorias as SelectList, "Escolha a categoria")
            @Html.ValidationMessageFor(model => model.CATEGORIA)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Nome)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Nome)
            @Html.ValidationMessageFor(model => model.Nome)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Data)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Data)
            @Html.ValidationMessageFor(model => model.Data)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Valor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Valor)
            @Html.ValidationMessageFor(model => model.Valor)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Periodicidade)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Periodicidade)
            @Html.ValidationMessageFor(model => model.Periodicidade)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParcelaInicial)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ParcelaInicial)
            @Html.ValidationMessageFor(model => model.ParcelaInicial)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParcelaTotal)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ParcelaTotal)
            @Html.ValidationMessageFor(model => model.ParcelaTotal)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TempoIndeterminado)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TempoIndeterminado)
            @Html.ValidationMessageFor(model => model.TempoIndeterminado)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
